diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5077b0f..2eaf3a5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -35,6 +35,21 @@ set(DOXYGEN_WARN_IF_UNDOCUMENTED "No")
 
 set(FEP3_PARTICIPANT_LIBRARY_VERSION "${FEP3_PARTICIPANT_LIBRARY_VERSION_MAJOR}.${FEP3_PARTICIPANT_LIBRARY_VERSION_MINOR}.${FEP3_PARTICIPANT_LIBRARY_VERSION_PATCH}")
 
+# check for conan
+message(STATUS "Including Conan build info")
+if ( EXISTS ${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo.cmake)
+    include(${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo.cmake)
+elseif ( EXISTS ${CMAKE_CURRENT_BINARY_DIR}/../conanbuildinfo.cmake)
+    include(${CMAKE_CURRENT_BINARY_DIR}/../conanbuildinfo.cmake)
+elseif ( EXISTS ${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo_multi.cmake)
+    include(${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo_multi.cmake)
+elseif ( EXISTS ${CMAKE_CURRENT_BINARY_DIR}/../conanbuildinfo_multi.cmake)
+    include(${CMAKE_CURRENT_BINARY_DIR}/../conanbuildinfo_multi.cmake)
+else()
+    message(FATAL_ERROR "Conan build info can't be found.")
+endif()
+conan_basic_setup(TARGETS NO_OUTPUT_DIRS)
+
 # Enable strict compiler warnings
 if(MSVC)
     # TODO /WD4100 should be removed when ODAUTIL-167 is fixed
diff --git a/src/fep3/CMakeLists.txt b/src/fep3/CMakeLists.txt
index 56afec7..7d9692b 100644
--- a/src/fep3/CMakeLists.txt
+++ b/src/fep3/CMakeLists.txt
@@ -31,7 +31,7 @@ install(
 )
 
 if(NOT TARGET dev_essential)
-    find_package(dev_essential 1.3.0 REQUIRED COMPONENTS pkg_rpc ddl)
+    find_package(dev_essential REQUIRED COMPONENTS pkg_rpc ddl)
 else()
     include(${dev_essential_SOURCE_DIR}/scripts/cmake/stub_generation.cmake)
 endif()
@@ -136,7 +136,8 @@ target_compile_definitions(fep3_participant_object_lib PRIVATE _FEP3_PARTICIPANT
 
 target_link_libraries(fep3_participant PRIVATE fep3_participant_object_lib fep3_component_registry
                                        PUBLIC dev_essential::result
-                                              dev_essential::memory)
+                                              dev_essential::memory
+                                              Boost::filesystem)
 
 if(UNIX)
     # we shall not export symbols from linked static libraries
diff --git a/src/fep3/base/component_registry/CMakeLists.txt b/src/fep3/base/component_registry/CMakeLists.txt
index 117b8e9..9298668 100644
--- a/src/fep3/base/component_registry/CMakeLists.txt
+++ b/src/fep3/base/component_registry/CMakeLists.txt
@@ -5,10 +5,10 @@
 # Public License, v. 2.0. If a copy of the MPL was not distributed
 # with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 if(NOT TARGET dev_essential)
-    find_package(dev_essential 1.3.0 REQUIRED COMPONENTS result process xml)
+    find_package(dev_essential 1.3.1 REQUIRED COMPONENTS result process xml)
 endif()
 
-find_package(Boost 1.73.0 REQUIRED COMPONENTS filesystem)
+find_package(Boost 1.73.0 REQUIRED)
 
 add_library(fep3_component_registry STATIC
 
@@ -56,6 +56,7 @@ target_link_libraries(fep3_component_registry PUBLIC
                                               dev_essential::result
                                               PRIVATE
                                               Boost::filesystem
+                                              Boost::disable_autolinking
                                               dev_essential::process
                                               dev_essential::xml)
 
diff --git a/src/fep3/base/component_registry/fep3_component_registry-config.cmake b/src/fep3/base/component_registry/fep3_component_registry-config.cmake
index 3a7fd41..38cebfa 100644
--- a/src/fep3/base/component_registry/fep3_component_registry-config.cmake
+++ b/src/fep3/base/component_registry/fep3_component_registry-config.cmake
@@ -13,11 +13,6 @@ if(NOT TARGET dev_essential)
     find_package(dev_essential 1.3.0 REQUIRED COMPONENTS result process)
 endif()
 
-find_package(Boost 1.73.0 COMPONENTS filesystem)
-if(Boost_FILESYSTEM_FOUND)
-    include(${CMAKE_CURRENT_LIST_DIR}/lib/cmake/fep3_component_registry_targets.cmake)
-    set(fep3_component_registry_FOUND true)
-elseif()
-    message(STATUS "Boost Filesystem not found, fep3_component_registry target not imported")
-    set(fep3_component_registry_FOUND false)
-endif()
+find_package(Boost 1.73.0 REQUIRED)
+include(${CMAKE_CURRENT_LIST_DIR}/lib/cmake/fep3_component_registry_targets.cmake)
+set(fep3_component_registry_FOUND true)
diff --git a/src/fep3/base/thread_utilities/CMakeLists.txt b/src/fep3/base/thread_utilities/CMakeLists.txt
index e5fadbb..95c9761 100644
--- a/src/fep3/base/thread_utilities/CMakeLists.txt
+++ b/src/fep3/base/thread_utilities/CMakeLists.txt
@@ -5,7 +5,7 @@
 # Public License, v. 2.0. If a copy of the MPL was not distributed
 # with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 
-find_package(Boost 1.73.0 REQUIRED COMPONENTS date_time thread headers)
+find_package(Boost 1.73.0 REQUIRED COMPONENTS date_time thread)
 
 add_library(fep3_thread_utilities STATIC
 ${CMAKE_CURRENT_SOURCE_DIR}/include/notification_waiting.h
diff --git a/src/plugins/fep_native_components/CMakeLists.txt b/src/plugins/fep_native_components/CMakeLists.txt
index 5805f34..3794f34 100644
--- a/src/plugins/fep_native_components/CMakeLists.txt
+++ b/src/plugins/fep_native_components/CMakeLists.txt
@@ -10,7 +10,7 @@ add_compile_definitions(LSSDP_SERVICE_DISCOVERY)
 if(NOT TARGET dev_essential)
     find_package(dev_essential 1.3.0 REQUIRED COMPONENTS pkg_rpc)
 endif()
-find_package(Boost 1.73.0 REQUIRED COMPONENTS date_time thread headers)
+find_package(Boost 1.73.0 REQUIRED COMPONENTS date_time thread)
 
 include(src/data_registry/cmake.sources)
 include(src/scheduler/cmake.sources)
diff --git a/src/plugins/fep_native_components/src/service_bus/CMakeLists.txt b/src/plugins/fep_native_components/src/service_bus/CMakeLists.txt
index 69a11fb..b504283 100644
--- a/src/plugins/fep_native_components/src/service_bus/CMakeLists.txt
+++ b/src/plugins/fep_native_components/src/service_bus/CMakeLists.txt
@@ -41,7 +41,7 @@ if(NOT TARGET dev_essential)
     find_package(dev_essential 1.3.0 REQUIRED COMPONENTS result pkg_rpc system process)
 endif()
 
-find_package(Boost REQUIRED COMPONENTS headers)
+find_package(Boost REQUIRED)
 
 target_include_directories(fep3_service_bus_base_lib
     PUBLIC
